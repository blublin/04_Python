-- Query: Create 6 new users

INSERT INTO users (first_name, last_name)
VALUES
('Conrad', 'Hutchinson'),
('Bianca', 'Valentine'),
('Pierre', 'Waller'),
('Soren', 'Mcbride'),
('Thomas', 'Vargas'),
('Harley', 'Mclean');

-- Query: Have user 1 be friends with user 2, 4 and 6

INSERT INTO friendships (user_id, friend_id)
VALUES (1, 2), (1, 4), (1, 6);

-- Query: Have user 2 be friends with user 1, 3 and 5

INSERT INTO friendships (user_id, friend_id)
VALUES (2, 1), (2, 3), (2, 5);

-- Query: Have user 3 be friends with user 2 and 5

INSERT INTO friendships (user_id, friend_id)
VALUES (3, 2), (3, 5);

-- Query: Have user 4 be friends with user 3

INSERT INTO friendships (user_id, friend_id)
VALUES (4,3);

-- Query: Have user 5 be friends with user 1 and 6

INSERT INTO friendships (user_id, friend_id)
VALUES (5,1), (5,6);

-- Query: Have user 6 be friends with user 2 and 3

INSERT INTO friendships (user_id, friend_id)
VALUES (6,2), (6,3);

-- Query: Display the relationships created as shown in the above image

SELECT u1.id, concat_ws(' ', u1.first_name, u1.last_name) as Name,
concat_ws(' ', u2.first_name, u2.last_name) as Friend_Name
FROM users as u1
JOIN friendships as f
ON u1.id = f.user_id
JOIN users as u2
ON f.friend_id = u2.id;

-- NINJA Query: Return all users who are friends with the first user, make sure their names are displayed in results.

SELECT u1.id, concat_ws(' ', u1.first_name, u1.last_name) as Name,
concat_ws(' ', u2.first_name, u2.last_name) as Friend_Name
FROM users as u1
JOIN friendships as f
ON u1.id = f.user_id
JOIN users as u2
ON f.friend_id = u2.id
WHERE u1.id = 1;

-- NINJA Query: Return the count of all friendships

SELECT count(*) FROM friendships;

-- NINJA Query: Find out who has the most friends and return the count of their friends.

SELECT u1.id, concat_ws(' ', u1.first_name, u1.last_name) as Name,
count(u2.first_name) as Friends
FROM users as u1
JOIN friendships as f
ON u1.id = f.user_id
JOIN users as u2
ON f.friend_id = u2.id
GROUP BY (u1.id)
ORDER BY count(u2.first_name) DESC;

-- NINJA Query: Return the friends of the third user in alphabetical order

SELECT u1.id, concat_ws(' ', u1.first_name, u1.last_name) as Name,
concat_ws(' ', u2.first_name, u2.last_name) as Friend_Name
FROM users as u1
JOIN friendships as f
ON u1.id = f.user_id
JOIN users as u2
ON f.friend_id = u2.id
WHERE u1.id = 3
ORDER BY Friend_name;